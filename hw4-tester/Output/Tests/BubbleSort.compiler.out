
const vmt_BBS
  :BBS.Start
  :BBS.Sort
  :BBS.Print
  :BBS.Init


func Main [in 0 , out 2 , local 3]



  $t3 = HeapAllocZ( 12)

  $v1 = $t3
  [$v1+0] = :vmt_BBS
  $v0 = $t3
  if $v0 goto :null1

  Error( "null pointer")
null1:

  $v0 = $t3
  $v0 = [$v0+0]
  $t2 = $v0

  $v0 = $t2
  $v0 = [$v0+0]
  $t2 = $v0

  local[0] = $t1
  local[1] = $t3
  local[2] = $t2

  $v0 = $t3
  $a0 = $v0
  $a1 = 10

  $v0 = $t2
  call $v0

  $t1 = local[0]
  $t3 = local[1]
  $t2 = local[2]

  $t1 = $v0

  $v0 = $t1
  PrintIntS( $v0)


  ret
func BBS.Start [in 2 , out 2 , local 6]


  $t5 = $a0
  $t4 = $a1

  $v0 = $t5
  $v0 = [$v0+0]
  $t6 = $v0

  $v0 = $t6
  $v0 = [$v0+12]
  $t6 = $v0

  local[0] = $t5
  local[1] = $t4
  local[2] = $t6
  local[3] = $t1
  local[4] = $t3
  local[5] = $t2

  $v0 = $t5
  $a0 = $v0
  $v0 = $t4
  $a1 = $v0

  $v0 = $t6
  call $v0

  $t5 = local[0]
  $t4 = local[1]
  $t6 = local[2]
  $t1 = local[3]
  $t3 = local[4]
  $t2 = local[5]

  $t0 = $v0

  $v0 = $t5
  $v0 = [$v0+0]
  $t3 = $v0

  $v0 = $t3
  $v0 = [$v0+8]
  $t3 = $v0

  local[0] = $t5
  local[1] = $t4
  local[2] = $t6
  local[3] = $t1
  local[4] = $t3
  local[5] = $t2

  $v0 = $t5
  $a0 = $v0

  $v0 = $t3
  call $v0

  $t5 = local[0]
  $t4 = local[1]
  $t6 = local[2]
  $t1 = local[3]
  $t3 = local[4]
  $t2 = local[5]

  $t0 = $v0

  PrintIntS( 99999)

  $v0 = $t5
  $v0 = [$v0+0]
  $t2 = $v0

  $v0 = $t2
  $v0 = [$v0+4]
  $t2 = $v0

  local[0] = $t5
  local[1] = $t4
  local[2] = $t6
  local[3] = $t1
  local[4] = $t3
  local[5] = $t2

  $v0 = $t5
  $a0 = $v0

  $v0 = $t2
  call $v0

  $t5 = local[0]
  $t4 = local[1]
  $t6 = local[2]
  $t1 = local[3]
  $t3 = local[4]
  $t2 = local[5]

  $t0 = $v0

  $v0 = $t5
  $v0 = [$v0+0]
  $t1 = $v0

  $v0 = $t1
  $v0 = [$v0+8]
  $t1 = $v0

  local[0] = $t5
  local[1] = $t4
  local[2] = $t6
  local[3] = $t1
  local[4] = $t3
  local[5] = $t2

  $v0 = $t5
  $a0 = $v0

  $v0 = $t1
  call $v0

  $t5 = local[0]
  $t4 = local[1]
  $t6 = local[2]
  $t1 = local[3]
  $t3 = local[4]
  $t2 = local[5]

  $t0 = $v0
  $v0 = 0

  ret
func BBS.Sort [in 2 , out 2 , local 17]

  local[0] = $s6
  local[1] = $s5
  local[2] = $s4
  local[3] = $s3
  local[4] = $s2
  local[5] = $s1
  local[6] = $s0
  local[7] = $s7

  local[8] = $a0

  $v0 = local[8]
  $v0 = [$v0+8]
  $s2 = $v0

  $v0 = $s2
  $s4 = Sub( $v0 1)

  $s2 = Sub( 0 1)
while1_top:

  $v0 = $s2
  $v1 = $s4
  $s1 = LtS( $v0 $v1)
  $v0 = $s1
  if0 $v0 goto :while1_end

  $s3 = 1
while2_top:

  $v0 = $s4
  $t5 = Add( $v0 1)

  $v0 = $s3
  $v1 = $t5
  $t3 = LtS( $v0 $v1)
  $v0 = $t3
  if0 $v0 goto :while2_end

  $v0 = $s3
  $s6 = Sub( $v0 1)

  $v0 = local[8]
  $v0 = [$v0+4]
  $t2 = $v0
  $v0 = $t2
  if $v0 goto :null2

  Error( "null pointer")
null2:

  $v0 = $t2
  $v0 = [$v0+0]
  $t1 = $v0

  $v0 = $s6
  $v1 = $t1
  $t1 = Lt( $v0 $v1)
  $v0 = $t1
  if $v0 goto :bounds1

  Error( "array index out of bounds")
bounds1:

  $v0 = $s6
  $t1 = MulS( $v0 4)

  $v0 = $t1
  $v1 = $t2
  $t1 = Add( $v0 $v1)

  $v0 = $t1
  $v0 = [$v0+4]
  $t5 = $v0

  $v0 = local[8]
  $v0 = [$v0+4]
  $s0 = $v0
  $v0 = $s0
  if $v0 goto :null3

  Error( "null pointer")
null3:

  $v0 = $s0
  $v0 = [$v0+0]
  $t8 = $v0

  $v0 = $s3
  $v1 = $t8
  $t8 = Lt( $v0 $v1)
  $v0 = $t8
  if $v0 goto :bounds2

  Error( "array index out of bounds")
bounds2:

  $v0 = $s3
  $t8 = MulS( $v0 4)

  $v0 = $t8
  $v1 = $s0
  $t8 = Add( $v0 $v1)

  $v0 = $t8
  $v0 = [$v0+4]
  $s6 = $v0

  $v0 = $s6
  $v1 = $t5
  $t7 = LtS( $v0 $v1)
  $v0 = $t7
  if0 $v0 goto :if1_else

  $v0 = $s3
  $s7 = Sub( $v0 1)

  $v0 = local[8]
  $v0 = [$v0+4]
  $t6 = $v0
  $v0 = $t6
  if $v0 goto :null4

  Error( "null pointer")
null4:

  $v0 = $t6
  $v0 = [$v0+0]
  $s6 = $v0

  $v0 = $s7
  $v1 = $s6
  $s6 = Lt( $v0 $v1)
  $v0 = $s6
  if $v0 goto :bounds3

  Error( "array index out of bounds")
bounds3:

  $v0 = $s7
  $s6 = MulS( $v0 4)

  $v0 = $s6
  $v1 = $t6
  $s6 = Add( $v0 $v1)

  $v0 = $s6
  $v0 = [$v0+4]
  $s5 = $v0

  $v0 = local[8]
  $v0 = [$v0+4]
  $s6 = $v0
  $v0 = $s6
  if $v0 goto :null5

  Error( "null pointer")
null5:

  $v0 = $s6
  $v0 = [$v0+0]
  $t5 = $v0

  $v0 = $s7
  $v1 = $t5
  $t5 = Lt( $v0 $v1)
  $v0 = $t5
  if $v0 goto :bounds4

  Error( "array index out of bounds")
bounds4:

  $v0 = $s7
  $t5 = MulS( $v0 4)

  $v0 = $t5
  $v1 = $s6
  $t5 = Add( $v0 $v1)

  $v0 = local[8]
  $v0 = [$v0+4]
  $s6 = $v0
  $v0 = $s6
  if $v0 goto :null6

  Error( "null pointer")
null6:

  $v0 = $s6
  $v0 = [$v0+0]
  $t4 = $v0

  $v0 = $s3
  $v1 = $t4
  $t4 = Lt( $v0 $v1)
  $v0 = $t4
  if $v0 goto :bounds5

  Error( "array index out of bounds")
bounds5:

  $v0 = $s3
  $t4 = MulS( $v0 4)

  $v0 = $t4
  $v1 = $s6
  $t4 = Add( $v0 $v1)

  $v0 = $t4
  $v0 = [$v0+4]
  $s6 = $v0
  $v0 = $s6
  $v1 = $t5
  [$v1+4] = $v0

  $v0 = local[8]
  $v0 = [$v0+4]
  $s6 = $v0
  $v0 = $s6
  if $v0 goto :null7

  Error( "null pointer")
null7:

  $v0 = $s6
  $v0 = [$v0+0]
  $t4 = $v0

  $v0 = $s3
  $v1 = $t4
  $t4 = Lt( $v0 $v1)
  $v0 = $t4
  if $v0 goto :bounds6

  Error( "array index out of bounds")
bounds6:

  $v0 = $s3
  $t4 = MulS( $v0 4)

  $v0 = $t4
  $v1 = $s6
  $t4 = Add( $v0 $v1)
  $v0 = $s5
  $v1 = $t4
  [$v1+4] = $v0
goto :if1_end
if1_else:

  $t0 = 0
if1_end:

  $v0 = $s3
  $s3 = Add( $v0 1)
goto :while2_top
while2_end:

  $v0 = $s4
  $s4 = Sub( $v0 1)
goto :while1_top
while1_end:
  $v0 = 0

  $s6 = local[0]
  $s5 = local[1]
  $s4 = local[2]
  $s3 = local[3]
  $s2 = local[4]
  $s1 = local[5]
  $s0 = local[6]
  $s7 = local[7]
  ret
func BBS.Print [in 2 , out 2 , local 7]


  $t7 = $a0

  $t5 = 0
while3_top:

  $v0 = $t7
  $v0 = [$v0+8]
  $t6 = $v0

  $v0 = $t5
  $v1 = $t6
  $t4 = LtS( $v0 $v1)
  $v0 = $t4
  if0 $v0 goto :while3_end

  $v0 = $t7
  $v0 = [$v0+4]
  $t3 = $v0
  $v0 = $t3
  if $v0 goto :null8

  Error( "null pointer")
null8:

  $v0 = $t3
  $v0 = [$v0+0]
  $t2 = $v0

  $v0 = $t5
  $v1 = $t2
  $t2 = Lt( $v0 $v1)
  $v0 = $t2
  if $v0 goto :bounds7

  Error( "array index out of bounds")
bounds7:

  $v0 = $t5
  $t2 = MulS( $v0 4)

  $v0 = $t2
  $v1 = $t3
  $t2 = Add( $v0 $v1)

  $v0 = $t2
  $v0 = [$v0+4]
  $t1 = $v0

  $v0 = $t1
  PrintIntS( $v0)

  $v0 = $t5
  $t5 = Add( $v0 1)
goto :while3_top
while3_end:
  $v0 = 0

  ret
func BBS.Init [in 2 , out 2 , local 16]

  local[0] = $s6
  local[1] = $s5
  local[2] = $s4
  local[3] = $s3
  local[4] = $s2
  local[5] = $s1
  local[6] = $s0
  local[7] = $s7

  $t2 = $a0
  $s6 = $a1
  $v0 = $s6
  $v1 = $t2
  [$v1+8] = $v0

  local[8] = $t5
  local[9] = $t4
  local[10] = $t7
  local[11] = $t6
  local[12] = $t1
  local[13] = $t3
  local[14] = $t2
  local[15] = $t8

  $v0 = $s6
  $a0 = $v0

  call :AllocArray

  $t5 = local[8]
  $t4 = local[9]
  $t7 = local[10]
  $t6 = local[11]
  $t1 = local[12]
  $t3 = local[13]
  $t2 = local[14]
  $t8 = local[15]

  $s4 = $v0
  $v0 = $s4
  $v1 = $t2
  [$v1+4] = $v0

  $v0 = $t2
  $v0 = [$v0+4]
  $s3 = $v0
  $v0 = $s3
  if $v0 goto :null9

  Error( "null pointer")
null9:

  $v0 = $s3
  $v0 = [$v0+0]
  $t7 = $v0

  $v1 = $t7
  $t7 = Lt( 0 $v1)
  $v0 = $t7
  if $v0 goto :bounds8

  Error( "array index out of bounds")
bounds8:

  $t7 = MulS( 0 4)

  $v0 = $t7
  $v1 = $s3
  $t7 = Add( $v0 $v1)

  $v1 = $t7
  [$v1+4] = 20

  $v0 = $t2
  $v0 = [$v0+4]
  $t5 = $v0
  $v0 = $t5
  if $v0 goto :null10

  Error( "null pointer")
null10:

  $v0 = $t5
  $v0 = [$v0+0]
  $t3 = $v0

  $v1 = $t3
  $t3 = Lt( 1 $v1)
  $v0 = $t3
  if $v0 goto :bounds9

  Error( "array index out of bounds")
bounds9:

  $t3 = MulS( 1 4)

  $v0 = $t3
  $v1 = $t5
  $t3 = Add( $v0 $v1)

  $v1 = $t3
  [$v1+4] = 7

  $v0 = $t2
  $v0 = [$v0+4]
  $t1 = $v0
  $v0 = $t1
  if $v0 goto :null11

  Error( "null pointer")
null11:

  $v0 = $t1
  $v0 = [$v0+0]
  $s2 = $v0

  $v1 = $s2
  $s2 = Lt( 2 $v1)
  $v0 = $s2
  if $v0 goto :bounds10

  Error( "array index out of bounds")
bounds10:

  $s2 = MulS( 2 4)

  $v0 = $s2
  $v1 = $t1
  $s2 = Add( $v0 $v1)

  $v1 = $s2
  [$v1+4] = 12

  $v0 = $t2
  $v0 = [$v0+4]
  $s1 = $v0
  $v0 = $s1
  if $v0 goto :null12

  Error( "null pointer")
null12:

  $v0 = $s1
  $v0 = [$v0+0]
  $s0 = $v0

  $v1 = $s0
  $s0 = Lt( 3 $v1)
  $v0 = $s0
  if $v0 goto :bounds11

  Error( "array index out of bounds")
bounds11:

  $s0 = MulS( 3 4)

  $v0 = $s0
  $v1 = $s1
  $s0 = Add( $v0 $v1)

  $v1 = $s0
  [$v1+4] = 18

  $v0 = $t2
  $v0 = [$v0+4]
  $t8 = $v0
  $v0 = $t8
  if $v0 goto :null13

  Error( "null pointer")
null13:

  $v0 = $t8
  $v0 = [$v0+0]
  $s5 = $v0

  $v1 = $s5
  $s5 = Lt( 4 $v1)
  $v0 = $s5
  if $v0 goto :bounds12

  Error( "array index out of bounds")
bounds12:

  $s5 = MulS( 4 4)

  $v0 = $s5
  $v1 = $t8
  $s5 = Add( $v0 $v1)

  $v1 = $s5
  [$v1+4] = 2

  $v0 = $t2
  $v0 = [$v0+4]
  $s7 = $v0
  $v0 = $s7
  if $v0 goto :null14

  Error( "null pointer")
null14:

  $v0 = $s7
  $v0 = [$v0+0]
  $s6 = $v0

  $v1 = $s6
  $s6 = Lt( 5 $v1)
  $v0 = $s6
  if $v0 goto :bounds13

  Error( "array index out of bounds")
bounds13:

  $s6 = MulS( 5 4)

  $v0 = $s6
  $v1 = $s7
  $s6 = Add( $v0 $v1)

  $v1 = $s6
  [$v1+4] = 11

  $v0 = $t2
  $v0 = [$v0+4]
  $s6 = $v0
  $v0 = $s6
  if $v0 goto :null15

  Error( "null pointer")
null15:

  $v0 = $s6
  $v0 = [$v0+0]
  $t5 = $v0

  $v1 = $t5
  $t5 = Lt( 6 $v1)
  $v0 = $t5
  if $v0 goto :bounds14

  Error( "array index out of bounds")
bounds14:

  $t5 = MulS( 6 4)

  $v0 = $t5
  $v1 = $s6
  $t5 = Add( $v0 $v1)

  $v1 = $t5
  [$v1+4] = 6

  $v0 = $t2
  $v0 = [$v0+4]
  $s6 = $v0
  $v0 = $s6
  if $v0 goto :null16

  Error( "null pointer")
null16:

  $v0 = $s6
  $v0 = [$v0+0]
  $t5 = $v0

  $v1 = $t5
  $t5 = Lt( 7 $v1)
  $v0 = $t5
  if $v0 goto :bounds15

  Error( "array index out of bounds")
bounds15:

  $t5 = MulS( 7 4)

  $v0 = $t5
  $v1 = $s6
  $t5 = Add( $v0 $v1)

  $v1 = $t5
  [$v1+4] = 9

  $v0 = $t2
  $v0 = [$v0+4]
  $t6 = $v0
  $v0 = $t6
  if $v0 goto :null17

  Error( "null pointer")
null17:

  $v0 = $t6
  $v0 = [$v0+0]
  $t4 = $v0

  $v1 = $t4
  $t4 = Lt( 8 $v1)
  $v0 = $t4
  if $v0 goto :bounds16

  Error( "array index out of bounds")
bounds16:

  $t4 = MulS( 8 4)

  $v0 = $t4
  $v1 = $t6
  $t4 = Add( $v0 $v1)

  $v1 = $t4
  [$v1+4] = 19

  $v0 = $t2
  $v0 = [$v0+4]
  $t2 = $v0
  $v0 = $t2
  if $v0 goto :null18

  Error( "null pointer")
null18:

  $v0 = $t2
  $v0 = [$v0+0]
  $s6 = $v0

  $v1 = $s6
  $s6 = Lt( 9 $v1)
  $v0 = $s6
  if $v0 goto :bounds17

  Error( "array index out of bounds")
bounds17:

  $s6 = MulS( 9 4)

  $v0 = $s6
  $v1 = $t2
  $s6 = Add( $v0 $v1)

  $v1 = $s6
  [$v1+4] = 5
  $v0 = 0

  $s6 = local[0]
  $s5 = local[1]
  $s4 = local[2]
  $s3 = local[3]
  $s2 = local[4]
  $s1 = local[5]
  $s0 = local[6]
  $s7 = local[7]
  ret
func AllocArray [in 2 , out 2 , local 3]


  $t3 = $a0

  $v0 = $t3
  $t2 = MulS( $v0 4)

  $v0 = $t2
  $t2 = Add( $v0 4)

  $v0 = $t2
  $t1 = HeapAllocZ( $v0)
  $v0 = $t3
  $v1 = $t1
  [$v1+0] = $v0
  $v0 = $t1

  ret
